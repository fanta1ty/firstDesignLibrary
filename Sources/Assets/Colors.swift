//  Created by Thinh Nguyen
//

import Foundation
import SwiftUI
import UIKit

public extension UIColor {
    static let g950: UIColor = .init(resource: .G_950)
    static let g900: UIColor = .init(resource: .G_900)
    static let g800: UIColor = .init(resource: .G_800)
    static let g700: UIColor = .init(resource: .G_700)
    static let g600: UIColor = .init(resource: .G_600)
    static let g500: UIColor = .init(resource: .G_500)
    static let g400: UIColor = .init(resource: .G_400)
    static let g300: UIColor = .init(resource: .G_300)
    static let g200: UIColor = .init(resource: .G_200)
    static let g100: UIColor = .init(resource: .G_100)
    static let g50: UIColor = .init(resource: .G_50)

    static let n1000: UIColor = .init(resource: .N_1000)
    static let n975: UIColor = .init(resource: .N_975)
    static let n950: UIColor = .init(resource: .N_950)
    static let n900: UIColor = .init(resource: .N_900)
    static let n800: UIColor = .init(resource: .N_800)
    static let n700: UIColor = .init(resource: .N_700)
    static let n600: UIColor = .init(resource: .N_600)
    static let n500: UIColor = .init(resource: .N_500)
    static let n400: UIColor = .init(resource: .N_400)
    static let n300: UIColor = .init(resource: .N_300)
    static let n200: UIColor = .init(resource: .N_200)
    static let n100: UIColor = .init(resource: .N_100)
    static let n50: UIColor = .init(resource: .N_50)
    static let n0: UIColor = .init(resource: .N_0)

    static let o950: UIColor = .init(resource: .O_950)
    static let o900: UIColor = .init(resource: .O_900)
    static let o800: UIColor = .init(resource: .O_800)
    static let o700: UIColor = .init(resource: .O_700)
    static let o600: UIColor = .init(resource: .O_600)
    static let o500: UIColor = .init(resource: .O_500)
    static let o400: UIColor = .init(resource: .O_400)
    static let o300: UIColor = .init(resource: .O_300)
    static let o200: UIColor = .init(resource: .O_200)
    static let o100: UIColor = .init(resource: .O_100)
    static let o50: UIColor = .init(resource: .O_50)

    static let pr950: UIColor = .init(resource: .pr950)
    static let pr900: UIColor = .init(resource: .pr900)
    static let pr800: UIColor = .init(resource: .pr800)
    static let pr700: UIColor = .init(resource: .pr700)
    static let pr600: UIColor = .init(resource: .pr600)
    static let pr500: UIColor = .init(resource: .pr500)
    static let pr400: UIColor = .init(resource: .pr400)
    static let pr300: UIColor = .init(resource: .pr300)
    static let pr200: UIColor = .init(resource: .pr200)
    static let pr100: UIColor = .init(resource: .pr100)
    static let pr50: UIColor = .init(resource: .pr50)

    static let pu950: UIColor = .init(resource: .pu950)
    static let pu900: UIColor = .init(resource: .pu900)
    static let pu800: UIColor = .init(resource: .pu800)
    static let pu700: UIColor = .init(resource: .pu700)
    static let pu600: UIColor = .init(resource: .pu600)
    static let pu500: UIColor = .init(resource: .pu500)
    static let pu400: UIColor = .init(resource: .pu400)
    static let pu300: UIColor = .init(resource: .pu300)
    static let pu200: UIColor = .init(resource: .pu200)
    static let pu100: UIColor = .init(resource: .pu100)
    static let pu50: UIColor = .init(resource: .pu50)

    static let r950: UIColor = .init(resource: .R_950)
    static let r900: UIColor = .init(resource: .R_900)
    static let r800: UIColor = .init(resource: .R_800)
    static let r700: UIColor = .init(resource: .R_700)
    static let r600: UIColor = .init(resource: .R_600)
    static let r500: UIColor = .init(resource: .R_500)
    static let r400: UIColor = .init(resource: .R_400)
    static let r300: UIColor = .init(resource: .R_300)
    static let r200: UIColor = .init(resource: .R_200)
    static let r100: UIColor = .init(resource: .R_100)
    static let r50: UIColor = .init(resource: .R_50)

    static let y950: UIColor = .init(resource: .Y_950)
    static let y900: UIColor = .init(resource: .Y_900)
    static let y800: UIColor = .init(resource: .Y_800)
    static let y700: UIColor = .init(resource: .Y_700)
    static let y600: UIColor = .init(resource: .Y_600)
    static let y500: UIColor = .init(resource: .Y_500)
    static let y400: UIColor = .init(resource: .Y_400)
    static let y300: UIColor = .init(resource: .Y_300)
    static let y200: UIColor = .init(resource: .Y_200)
    static let y100: UIColor = .init(resource: .Y_100)
    static let y50: UIColor = .init(resource: .Y_50)

    static let gy950: UIColor = .init(resource: .gy950)
    static let gy900: UIColor = .init(resource: .gy900)
    static let gy750: UIColor = .init(resource: .gy750)
    static let gy50: UIColor = .init(resource: .gy50)

    static let sd700: UIColor = .init(resource: .sd700)
    static let sd400: UIColor = .init(resource: .sd400)

    static let id1000: UIColor = .init(resource: .id1000)
    static let id900: UIColor = .init(resource: .id900)
    static let id800: UIColor = .init(resource: .id800)
    static let id700: UIColor = .init(resource: .id700)
    static let id600: UIColor = .init(resource: .id600)
    static let id500: UIColor = .init(resource: .id500)
    static let id400: UIColor = .init(resource: .id400)
    static let id300: UIColor = .init(resource: .id300)
    static let id200: UIColor = .init(resource: .id200)
    static let id100: UIColor = .init(resource: .id100)
    static let id50: UIColor = .init(resource: .id50)

    static let cy1000: UIColor = .init(resource: .cy1000)
    static let cy900: UIColor = .init(resource: .cy900)
    static let cy800: UIColor = .init(resource: .cy800)
    static let cy700: UIColor = .init(resource: .cy700)
    static let cy600: UIColor = .init(resource: .cy600)
    static let cy500: UIColor = .init(resource: .cy500)
    static let cy400: UIColor = .init(resource: .cy400)
    static let cy300: UIColor = .init(resource: .cy300)
    static let cy200: UIColor = .init(resource: .cy200)
    static let cy100: UIColor = .init(resource: .cy100)
    static let cy50: UIColor = .init(resource: .cy50)

    static let li1000: UIColor = .init(resource: .li1000)
    static let li900: UIColor = .init(resource: .li900)
    static let li800: UIColor = .init(resource: .li800)
    static let li700: UIColor = .init(resource: .li700)
    static let li600: UIColor = .init(resource: .li600)
    static let li500: UIColor = .init(resource: .li500)
    static let li400: UIColor = .init(resource: .li400)
    static let li300: UIColor = .init(resource: .li300)
    static let li200: UIColor = .init(resource: .li200)
    static let li100: UIColor = .init(resource: .li100)
    static let li50: UIColor = .init(resource: .li50)

    static let pe1000: UIColor = .init(resource: .pe1000)
    static let pe900: UIColor = .init(resource: .pe900)
    static let pe800: UIColor = .init(resource: .pe800)
    static let pe700: UIColor = .init(resource: .pe700)
    static let pe600: UIColor = .init(resource: .pe600)
    static let pe500: UIColor = .init(resource: .pe500)
    static let pe400: UIColor = .init(resource: .pe400)
    static let pe300: UIColor = .init(resource: .pe300)
    static let pe200: UIColor = .init(resource: .pe200)
    static let pe100: UIColor = .init(resource: .pe100)
    static let pe50: UIColor = .init(resource: .pe50)

    static let v950: UIColor = .init(resource: .V_950)
    static let v900: UIColor = .init(resource: .V_900)
    static let v800: UIColor = .init(resource: .V_800)
    static let v700: UIColor = .init(resource: .V_700)
    static let v600: UIColor = .init(resource: .V_600)
    static let v500: UIColor = .init(resource: .V_500)
    static let v400: UIColor = .init(resource: .V_400)
    static let v300: UIColor = .init(resource: .V_300)
    static let v200: UIColor = .init(resource: .V_200)
    static let v100: UIColor = .init(resource: .V_100)
    static let v50: UIColor = .init(resource: .V_50)
}

// MARK: - Old colors

public extension UIColor {
    static let textBody: UIColor = .init(resource: .textBody)
    static let textBodyInverted: UIColor = .init(resource: .textBodyInverted)
    static let textBodySubtle: UIColor = .init(resource: .textBodySubtle)
    static let textHeading: UIColor = .init(resource: .textHeading)
    static let uiHighlighted: UIColor = .init(resource: .uiHighlighted)
    static let uiSecondary: UIColor = .init(resource: .uiSecondary)
}

public extension UIColor {
    static let border: UIColor = .init(resource: .border)
    static let borderDisabled: UIColor = .init(resource: .borderDisabled)
    static let borderFocus: UIColor = .init(resource: .borderFocus)
    static let borderNegative: UIColor = .init(resource: .borderNegative)
    static let borderPositive: UIColor = .init(resource: .borderPositive)
    static let borderSubtle: UIColor = .init(resource: .borderSubtle)
    static let buttonOutline: UIColor = .init(resource: .buttonOutline)
    static let buttonPrimary: UIColor = .init(resource: .buttonPrimary)
    static let buttonPrimaryDisabled: UIColor = .init(resource: .buttonPrimaryDisabled)
    static let buttonPrimaryPressed: UIColor = .init(resource: .buttonPrimaryPressed)
    static let buttonSecondary: UIColor = .init(resource: .buttonSecondary)
    static let buttonSecondaryDisabled: UIColor = .init(resource: .buttonSecondaryDisabled)
    static let buttonSecondaryPressed: UIColor = .init(resource: .buttonSecondaryPressed)
    static let buttonTertiary: UIColor = .init(resource: .buttonTertiary)
    static let buttonTertiaryLight: UIColor = .init(resource: .buttonTertiaryLight)
    static let buttonTertiaryDisabled: UIColor = .init(resource: .buttonTertiaryDisabled)
    static let buttonTertiaryPressed: UIColor = .init(resource: .buttonTertiaryPressed)
    static let buttonToggle: UIColor = .init(resource: .buttonToggle)
    static let buttonToggleSelected: UIColor = .init(resource: .buttonToggleSelected)
    static let buttonToggleActive: UIColor = .init(resource: .buttonToggleActive)
    static let buttonToggleDark: UIColor = .init(resource: .buttonToggleDark)
    static let divider1: UIColor = .init(resource: .divider1)
    static let dividerActive2: UIColor = .init(resource: .dividerActive2)
    static let icon: UIColor = .init(resource: .icon)
    static let iconActive: UIColor = .init(resource: .iconActive)
    static let iconLight: UIColor = .init(resource: .iconLight)
    static let iconDark: UIColor = .init(resource: .iconDark)
    static let iconDisabled: UIColor = .init(resource: .iconDisabled)
    static let iconDisabledLight: UIColor = .init(resource: .iconDisabledLight)
    static let iconInverse: UIColor = .init(resource: .iconInverse)
    static let iconInverseLight: UIColor = .init(resource: .iconInverseLight)
    static let overlay30: UIColor = .init(resource: .overlay30)
    static let overlay60: UIColor = .init(resource: .overlay60)
    static let primary: UIColor = .init(resource: .primary)
    static let primaryVariant: UIColor = .init(resource: .primaryVariant)
    static let statusInfo: UIColor = .init(resource: .statusInfo)
    static let statusInfoBackground: UIColor = .init(resource: .statusInfoBackground)
    static let statusNegative: UIColor = .init(resource: .statusNegative)
    static let statusNegativeLight: UIColor = .init(resource: .statusNegativeLight)
    static let statusNegativeBackground: UIColor = .init(resource: .statusNegativeBackground)
    static let statusNegativeBackgroundLight: UIColor = .init(resource: .statusNegativeBackgroundLight)
    static let statusPositive: UIColor = .init(resource: .statusPositive)
    static let statusPositiveBackground: UIColor = .init(resource: .statusPositiveBackground)
    static let statusPositiveBackgroundLight: UIColor = .init(resource: .statusPositiveBackgroundLight)
    static let statusWarning: UIColor = .init(resource: .statusWarning)
    static let statusWarningBackground: UIColor = .init(resource: .statusWarningBackground)
    static let surfaceL0: UIColor = .init(resource: .surfaceL0)
    static let surfaceL1: UIColor = .init(resource: .surfaceL1)
    static let surfaceL2: UIColor = .init(resource: .surfaceL2)
    static let surfaceL3: UIColor = .init(resource: .surfaceL3)
    static let surfaceL4: UIColor = .init(resource: .surfaceL4)
    static let surfaceL5: UIColor = .init(resource: .surfaceL5)
    static let surfaceL6: UIColor = .init(resource: .surfaceL6)
    static let textBrand: UIColor = .init(resource: .textBrand)
    static let textDisabled: UIColor = .init(resource: .textDisabled)
    static let textLink: UIColor = .init(resource: .textLink)
    static let textLinkLight: UIColor = .init(resource: .textLinkLight)
    static let textLinkPressed: UIColor = .init(resource: .textLinkPressed)
    static let textLinkWarning: UIColor = .init(resource: .textLinkWarning)
    static let textNegative: UIColor = .init(resource: .textNegative)
    static let textNegativeLight: UIColor = .init(resource: .textNegativeLight)
    static let textPositive: UIColor = .init(resource: .textPositive)
    static let textPrimary: UIColor = .init(resource: .textPrimary)
    static let textPrimaryInverse: UIColor = .init(resource: .textPrimaryInverse)
    static let textPrimaryLight: UIColor = .init(resource: .textPrimaryLight)
    static let textPrimaryDark: UIColor = .init(resource: .textPrimaryDark)
    static let textSecondary: UIColor = .init(resource: .textSecondary)
    static let textSecondaryInverse: UIColor = .init(resource: .textSecondaryInverse)
    static let textSecondaryLight: UIColor = .init(resource: .textSecondaryLight)
    static let textSecondaryDark: UIColor = .init(resource: .textSecondaryDark)
    static let textTertiary: UIColor = .init(resource: .textTertiary)
    static let textTertiaryInverse: UIColor = .init(resource: .textTertiaryInverse)
    static let textTertiaryLight: UIColor = .init(resource: .textTertiaryLight)
    static let textTertiaryDark: UIColor = .init(resource: .textTertiaryDark)
    static let textWarning: UIColor = .init(resource: .textWarning)
    static let textWarningLight: UIColor = .init(resource: .textWarningLight)
    static let textInfo: UIColor = .init(resource: .textInfo)
    static let ui: UIColor = .init(resource: .UI)
    static let uiAccent: UIColor = .init(resource: .uiAccent)
    static let uiAccentLight: UIColor = .init(resource: .uiAccentLight)
    static let uiAccentPurple: UIColor = .init(resource: .uiAccentPurple)
    static let uiAccentGreen: UIColor = .init(resource: .uiAccentGreen)
    static let uiAccentRed: UIColor = .init(resource: .uiAccentRed)
    static let uiAccentOrange: UIColor = .init(resource: .uiAccentOrange)
    static let uiAccentYellow: UIColor = .init(resource: .uiAccentYellow)
    static let uiActive: UIColor = .init(resource: .uiActive)
    static let uiBackdrop: UIColor = .init(resource: .uiBackdrop)
    static let uiCardBackground: UIColor = .init(resource: .uiCardBackground)
    static let uiBackgroundPrimary: UIColor = .init(resource: .uiBackgroundPrimary)
    static let uiBackgroundSecondary: UIColor = .init(resource: .uiBackgroundSecondary)
    static let uiBackgroundTertiary: UIColor = .init(resource: .uiBackgroundTertiary)
    static let uiBackgroundPrimaryLight: UIColor = .init(resource: .uiBackgroundPrimaryLight)
    static let uiBackgroundViolet: UIColor = .init(resource: .uiBackgroundViolet)
    static let uiBrand: UIColor = .init(resource: .uiBrand)
    static let uiInverse: UIColor = .init(resource: .uiInverse)
    static let uiPrimary: UIColor = .init(resource: .uiPrimary)
    static let uiPrimaryDark: UIColor = .init(resource: .uiPrimaryDark)
    static let uiPrimaryLight: UIColor = .init(resource: .uiPrimaryLight)
    static let uiPrimary50: UIColor = .init(resource: .primary50)
    static let uiTooltip: UIColor = .init(resource: .uiTooltip)
    static let uiTransparent: UIColor = .init(resource: .uiTransparent)
    static let uiTxnHeadOutgoing: UIColor = .init(resource: .uiTxnHeadOutgoing)
    static let uiTxnHeadIncome: UIColor = .init(resource: .uiTxnHeadIncome)
    static let uiTxnHeadCharges: UIColor = .init(resource: .uiTxnHeadCharges)
    static let unionCardBackground: UIColor = .init(resource: .unionCardBackground)
    static let paynow: UIColor = .init(resource: .paynow)
    static let uiProductBlue: UIColor = .init(resource: .uiProductBlue)
    static let uiProductGreen: UIColor = .init(resource: .uiProductGreen)
    static let uiProductViolet: UIColor = .init(resource: .uiProductViolet)
    static let uiProductYellow: UIColor = .init(resource: .uiProductYellow)
    static let promoTagLight: UIColor = .init(resource: .promoTagLight)
    static let pendingTagLight: UIColor = .init(resource: .pendingTagLight)

    static let tpBackgroundAlwaysLight: UIColor = .gy950
    static let tpCardAlwaysLight: UIColor = .gy900
    static let tpCardBackgroundColor: UIColor = .gy750
    static let tpBrandDark: UIColor = .sd700
    static let tpBrandLight: UIColor = .sd400
    static let newHomeBackground: UIColor = .pr900
}
